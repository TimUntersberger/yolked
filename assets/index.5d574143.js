var e=Object.defineProperty,t=Object.defineProperties,a=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,r=(t,a,s)=>a in t?e(t,a,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[a]=s;import{r as o,D as l,Q as c,R as p,a as d,H as h}from"./vendor.22b4e1e6.js";o.exports.createContext([void 0,()=>{}]),o.exports.createContext(["fitness",()=>{}]);class u{async create_file(e){const t=await gapi.client.request({path:"drive/v3/files",method:"POST",body:e});return JSON.parse(t.body)}async get_all_by_query(e){const t=await gapi.client.request({path:"drive/v3/files",method:"GET",params:{q:e}});return JSON.parse(t.body).files}async get_one_by_query(e){const t=await gapi.client.request({path:"drive/v3/files",method:"GET",params:{q:e,pageSize:1}});return JSON.parse(t.body).files[0]}async get_all(){const e=await gapi.client.request({path:"drive/v3/files",method:"GET"});return JSON.parse(e.body).files}async create_folder(e){return this.create_file((o=((e,t)=>{for(var a in t||(t={}))n.call(t,a)&&r(e,a,t[a]);if(s)for(var a of s(t))i.call(t,a)&&r(e,a,t[a]);return e})({},e),t(o,a({mimeType:"application/vnd.google-apps.folder"}))));var o}async delete_item(e){await gapi.client.request({path:"drive/v3/files/"+e,method:"DELETE"})}}const g="https://sheets.googleapis.com/v4/spreadsheets/";class m{constructor(e,t){this.id=e,this.title=t}static from_json(e){return new m(e.spreadsheetId,e.properties.title)}async append(e){await gapi.client.request({path:g+this.id+"/values/A1:append",method:"POST",body:{range:"A1",majorDimension:"ROWS",values:e},params:{valueInputOption:"RAW"}})}async clear(){await gapi.client.request({path:g+this.id+"/values/Sheet1:clear",method:"POST"})}async update(e){await gapi.client.request({path:g+this.id+"/values/Sheet1",method:"PUT",body:{range:"Sheet1",majorDimension:"ROWS",values:e},params:{valueInputOption:"RAW"}})}async get_all(){return this.get_range("Sheet1")}async get_range(e){const t=await gapi.client.request({path:g+this.id+"/values/"+e,method:"GET"});return JSON.parse(t.body).values}}class _{async create(e){const t=await gapi.client.request({path:g,method:"POST",body:{properties:{title:e}}});return m.from_json(JSON.parse(t.body))}async get_by_id(e){try{const t=await gapi.client.request({path:g+e,method:"GET"});return m.from_json(JSON.parse(t.body))}catch{return null}}async get_all(){return await w.drive.get_all_by_query("mimeType = 'application/vnd.google-apps.spreadsheet'").then((e=>e.map((e=>new m(e.id,e.name)))))}async get_all_by_query(e){return await w.drive.get_all_by_query(`mimeType = 'application/vnd.google-apps.spreadsheet' and ${e}`).then((e=>e.map((e=>new m(e.id,e.name)))))}async get_one_by_query(e){return await w.drive.get_one_by_query(`mimeType = 'application/vnd.google-apps.spreadsheet' and ${e}`).then((e=>e&&new m(e.id,e.name)))}async get_by_name(e){return await this.get_one_by_query(`name = '${e}'`)}}const y=["https://www.googleapis.com/auth/drive","https://www.googleapis.com/auth/drive.appdata"].join(" ");var w=new class{constructor(){this.initialized=!1,this.signed_in=!1,this.drive=new u,this.sheets=new _,this.event_handler=()=>{}}load(){return new Promise((e=>{gapi.load("client:auth2",(()=>{e()}))}))}init(){return new Promise((e=>{gapi.auth2.init({client_id:"783083744421-e7sv195ihcgmq1bvpqdpevneu7otam00.apps.googleusercontent.com",scope:y,ux_mode:"popup"}).then((t=>{this.initialized=!0,this.signed_in=t.isSignedIn.get(),t.isSignedIn.listen((e=>{this.signed_in=e,this.event_handler(e?"signIn":"signOut")})),this.event_handler("initialized"),e()}))}))}get_user(){return gapi.auth2.getAuthInstance().currentUser.get()}set_event_handler(e){this.event_handler=e}sign_in(){if(!this.signed_in)return gapi.auth2.getAuthInstance().signIn()}sign_out(){this.signed_in&&gapi.auth2.getAuthInstance().signOut()}};const v="__yolked_index";class b{constructor(e,t){this.name=e,this.sheet=t}async add(...e){return this.sheet.append([e])}async get_all(){return this.sheet.get_all()}}const f=new class extends l{constructor(){super("IndexedDatabase"),this.version(1).stores({exercises:"++id",workouts:"++id",programs:"++id"})}};function S(e){const t=o.exports.useRef(null);return o.exports.useEffect((()=>{c.init({inputStream:{type:"LiveStream",constraints:{width:640,height:480,facingMode:"environment"},target:t.current},locate:!1,locator:{patchSize:"medium",halfSample:!1,debug:{showCanvas:!0,showPatches:!0,showFoundPatches:!0,showSkeleton:!0,showLabels:!0,showPatchLabels:!0,showRemainingPatchLabels:!0,boxFromPatches:{showTransformed:!0,showTransformedBox:!0,showBB:!0}}},multiple:!0,numOfWorkers:8,decoder:{readers:["ean_reader","upc_reader"],multiple:!0}},(function(t){if(t)return void console.error("Failed to initialize Quagga",t);c.CameraAccess.getActiveTrack().applyConstraints({advanced:[{zoom:1.5}]});const a=[];c.onDetected((t=>{t.forEach((e=>a.push(e))),a.length>20&&(c.stop(),e.onDetected(function(e){if(0==e.length)return null;const t={};let a=e[0],s=1;for(var n=0;n<e.length;n++){var i=e[n];null==t[i]?t[i]=1:t[i]++,t[i]>s&&(a=i,s=t[i])}return a}(a)))})),c.start()}))}),[]),p.createElement("div",{ref:t})}function O(){const[e,t]=o.exports.useState(!1),a=f,[s,n]=o.exports.useState();return o.exports.useEffect((()=>{a.open().then((()=>{t(!0)})).catch((e=>alert("Failed to open IndexedDatabase: "+JSON.stringify(e))))}),[]),s?(console.log(s),p.createElement("span",null,s.codeResult.code)):p.createElement(S,{onDetected:n})}window.IDB=f,new class{constructor(e){this.table_names=e,this.prefixed_table_names=e.map((e=>"__yolked_"+e))}async sync(e){const t=localStorage.getItem("lastSyncTime");console.log(t);for(const a of this.table_names){const t="__yolked_"+a,s=await w.sheets.get_by_name(t);if(s){const t=(await e[a].toArray()).map((e=>[JSON.stringify(e)]));await s.clear(),await s.update(t)}}localStorage.setItem("lastSyncTime",Date.now().toString())}async create_tables(){const e=[v].concat(this.prefixed_table_names),[t,...a]=await Promise.all(e.map((async e=>new b(e,await w.sheets.create(e)))));await t.sheet.append([a.map((e=>e.sheet.id))])}async cleanup(){const e=await w.sheets.get_all_by_query([v,...this.prefixed_table_names].map((e=>`name = '${e}'`)).join(" or "));await Promise.all(e.map((e=>w.drive.delete_item(e.id))))}async init(){await w.sheets.get_by_name(v)||(console.log("Creating tables"),await this.create_tables())}}(["exercises","workouts","programs"]),d.render(p.createElement(p.StrictMode,null,p.createElement(h,null,p.createElement(O,null))),document.getElementById("root"));
